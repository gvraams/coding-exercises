Problem background:
A group event will be created by an user. The group event should run for a whole number of days e.g.. 30 or 60.
There should be attributes to set and update the start, end and duration of the event and calculate the missing value if 2 are given.
The event also has a name, description (which supports formatting) and location.
The event should be draft or published.
To publish all of the fields are required, it can be saved with only a subset of fields before itâ€™s published.
When the event is deleted it should be kept in the database and marked as such.

Deliverable:
Write an AR model, spec and migration for a GroupEvent that would meet the needs of the description above.
Then write the api controller and spec to support JSON request/responses to manage these GroupEvents.
For the purposes of this exercise, ignore auth.
Please provide your solution as a rails app called exercise_YYMMDD_yourname, sent as a zip file.

---

Entities:
GroupEvent:
  Has one name
  Has one description that can be formatted with Markup
  Has one location
  Can be soft-deleted
  Has a created_by User association
  Should have a default state of DRAFT
  Should have start_date, end_date & duration when changing status to PUBLISHED
User:
Location:
  Has  one latitude
  Has one longitude
  Has one address text area

Models: User, Location, GroupEvent
Controllers:
GroupEventsController: index, show, create, update, destroy, restore, really_delete, publish
UsersController: index, show, create, update, destroy
LocationsController: index, show, create, update, destroy
